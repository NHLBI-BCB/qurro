define(['display',
        'mocha',
        'chai'],
    function(display, mocha, chai) {
        // Just the output from the python "matching" integration test
        var rankPlotJSON = {"config": {"view": {"width": 400, "height": 300}, "axis": {"gridColor": "#f2f2f2"}}, "data": {"name": "data-9a1dd79e18e69cf28db67fccfed0f389"}, "mark": "bar", "encoding": {"color": {"type": "nominal", "field": "Classification", "scale": {"domain": ["None", "Numerator", "Denominator", "Both"], "range": ["#e0e0e0", "#f00", "#00f", "#949"]}}, "size": {"value": 1.0}, "tooltip": [{"type": "quantitative", "field": "x"}, {"type": "nominal", "field": "Classification"}, {"type": "nominal", "field": "Feature ID"}], "x": {"type": "quantitative", "field": "x", "title": "Features"}, "y": {"type": "quantitative", "field": "Intercept"}}, "selection": {"selector005": {"type": "interval", "bind": "scales", "encodings": ["x", "y"]}}, "title": "Feature Ranks", "$schema": "https://vega.github.io/schema/vega-lite/v2.6.0.json", "datasets": {"data-9a1dd79e18e69cf28db67fccfed0f389": [{"Feature ID": "Taxon2", "x": 0, "Classification": "None", "Intercept": 1.0, "Rank 1": 2.0, "Rank 2": 3.0}, {"Feature ID": "Taxon3|Yeet|100", "x": 1, "Classification": "None", "Intercept": 4.0, "Rank 1": 5.0, "Rank 2": 6.0}, {"Feature ID": "Taxon1", "x": 2, "Classification": "None", "Intercept": 5.0, "Rank 1": 6.0, "Rank 2": 7.0}, {"Feature ID": "Taxon5", "x": 3, "Classification": "None", "Intercept": 6.0, "Rank 1": 5.0, "Rank 2": 4.0}, {"Feature ID": "Taxon4", "x": 4, "Classification": "None", "Intercept": 9.0, "Rank 1": 8.0, "Rank 2": 7.0}], "rankratioviz_rank_ordering": ["Intercept", "Rank 1", "Rank 2"]}};
        var samplePlotJSON = {"config": {"view": {"width": 400, "height": 300}}, "data": {"name": "data-33b482effd2339a0422dedfb6f7fcd0c"}, "mark": "circle", "encoding": {"color": {"type": "nominal", "field": "Metadata1"}, "tooltip": [{"type": "nominal", "field": "Sample ID"}], "x": {"type": "quantitative", "field": "Metadata1"}, "y": {"type": "quantitative", "field": "rankratioviz_balance", "title": "log(Numerator / Denominator)"}}, "title": "Log Ratio of Abundances in Samples", "$schema": "https://vega.github.io/schema/vega-lite/v2.6.0.json", "datasets": {"data-33b482effd2339a0422dedfb6f7fcd0c": [{"Sample ID": "Sample7", "rankratioviz_balance": null, "Metadata1": 19, "Metadata2": 20, "Metadata3": 21}, {"Sample ID": "Sample6", "rankratioviz_balance": null, "Metadata1": 16, "Metadata2": 17, "Metadata3": 18}, {"Sample ID": "Sample2", "rankratioviz_balance": null, "Metadata1": 4, "Metadata2": 5, "Metadata3": 6}, {"Sample ID": "Sample1", "rankratioviz_balance": null, "Metadata1": 1, "Metadata2": 2, "Metadata3": 3}, {"Sample ID": "Sample5", "rankratioviz_balance": null, "Metadata1": 13, "Metadata2": 14, "Metadata3": 15}, {"Sample ID": "Sample3", "rankratioviz_balance": null, "Metadata1": 7, "Metadata2": 8, "Metadata3": 9}], "rankratioviz_feature_col_ids": {"Taxon3|Yeet|100": "0", "Taxon4": "1", "Taxon1": "2", "Taxon5": "3", "Taxon2": "4"}, "rankratioviz_feature_counts": {"0": {"Sample7": 2.0, "Sample6": 3.0, "Sample2": 3.0, "Sample1": 2.0, "Sample5": 4.0, "Sample3": 4.0}, "1": {"Sample7": 1.0, "Sample6": 1.0, "Sample2": 1.0, "Sample1": 1.0, "Sample5": 1.0, "Sample3": 1.0}, "2": {"Sample7": 6.0, "Sample6": 5.0, "Sample2": 1.0, "Sample1": 0.0, "Sample5": 4.0, "Sample3": 2.0}, "3": {"Sample7": 0.0, "Sample6": 0.0, "Sample2": 0.0, "Sample1": 0.0, "Sample5": 2.0, "Sample3": 1.0}, "4": {"Sample7": 0.0, "Sample6": 1.0, "Sample2": 5.0, "Sample1": 6.0, "Sample5": 2.0, "Sample3": 4.0}}}};
        describe("Making plots",
                 function() {
            var rrv = new display.RRVDisplay(rankPlotJSON, samplePlotJSON);
            it("Properly initializes an RRVDisplay object", function() {
                chai.assert.strictEqual(rrv.rankPlotJSON, rankPlotJSON);
                chai.assert.strictEqual(rrv.samplePlotJSON, samplePlotJSON);
                // RRVDisplay.onHigh indicates that the next "single"-selected
                // feature from the rank plot will be the numerator of a log
                // ratio
                chai.assert.isTrue(rrv.onHigh);
            });
        });
    }
);
